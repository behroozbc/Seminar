import{d as m,f,o as p,g as e,j as o,n as r,b as g,w as a,B as s,v as h,x as v,C as u}from"../modules/vue-D0HQ-a_i.js";import{_ as y}from"../index-Dtf84BS-.js";import{u as _,f as C}from"./context-DXwG0DVc.js";import"../modules/shiki-DbNa4rdB.js";const x={class:"col-header"},w=m({__name:"two-cols-header",props:{class:{type:String},layoutClass:{type:String}},setup(i){const n=i;return(l,d)=>(p(),f("div",{class:r(["slidev-layout two-cols-header w-full h-full",i.layoutClass])},[e("div",x,[o(l.$slots,"default",{},void 0,!0)]),e("div",{class:r(["col-left",n.class])},[o(l.$slots,"left",{},void 0,!0)],2),e("div",{class:r(["col-right",n.class])},[o(l.$slots,"right",{},void 0,!0)],2),e("div",{class:r(["col-bottom",n.class])},[o(l.$slots,"bottom",{},void 0,!0)],2)],2))}}),P=y(w,[["__scopeId","data-v-c7600785"]]),N={__name:"example.md__slidev_41",setup(i){const{$clicksContext:n,$frontmatter:l}=_();return n.setup(),(d,t)=>(p(),g(P,h(v(u(C)(u(l),40))),{left:a(c=>t[0]||(t[0]=[e("ul",null,[e("li",null,[s("GraphDB Reasoner: "),e("ul",null,[e("li",null,"Based on W3C recommendations, infers new facts using forward chaining entailment rules."),e("li",null,"Employs a materialization strategy, applying inference rules repeatedly to explicit statements until no new implicit statements are produced."),e("li",null,"Inferred statements are generated at load time, leading to longer loading times but faster query execution.")])]),e("li",null,[s("Reasoning Profiles: "),e("ul",null,[e("li",null,"Supports RDF(S), RDFS-Plus, and OWL2 profiles."),e("li",null,[e("strong",null,"OWL-Horst"),s(": Non-W3C profile with restrictions on OWL RL for improved reasoning performance on large datasets.")]),e("li",null,[e("strong",null,"RDFS-Plus"),s(": Non-W3C profile used in the GTKG, supports subsumption reasoning for types/properties and reasoning for inverse/transitive properties.")])])])],-1)])),right:a(c=>t[1]||(t[1]=[e("ul",null,[e("li",null,[s("Virtual Named Graphs: "),e("ul",null,[e("li",null,[s("Two built-in named graphs: "),e("ul",null,[e("li",null,"Explicit Named Graph: Contains only explicitly loaded triples."),e("li",null,"Implicit Named Graph: Contains only inferred triples.")])]),e("li",null,"Queries can specify whether to include only explicit statements or both explicit and implicit statements.")])])],-1)])),default:a(()=>[t[2]||(t[2]=e("h3",null,"Reasoning",-1))]),_:1,__:[2]},16))}};export{N as default};
