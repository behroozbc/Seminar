import{b as r,o as i,w as o,g as e,B as t,v as p,x as u,C as s}from"./modules/vue-D0HQ-a_i.js";import{I as d}from"./slidev/default-Bv27pt1B.js";import{u as m,f as c}from"./slidev/context-DXwG0DVc.js";import"./index-Dtf84BS-.js";import"./modules/shiki-DbNa4rdB.js";const v={__name:"graph-databases.md__slidev_25",setup(g){const{$clicksContext:n,$frontmatter:l}=m();return n.setup(),(h,a)=>(i(),r(d,p(u(s(c)(s(l),24))),{default:o(()=>a[0]||(a[0]=[e("h1",null,"Graph Databases",-1),e("ul",null,[e("li",null,[e("p",null,"This paradigm represents data and/or the schema as graphs.")]),e("li",null,[e("p",null,"Many implementations support flexible schemas, with some offering data integrity features (e.g., constraints, identity, referential integrity)")]),e("li",null,[e("p",null,[e("strong",null,"Graph Data Model"),t(":")]),e("ul",null,[e("li",null,[e("strong",null,"Nodes"),t(": Represent entities, with metadata as key-value pairs and labels indicating roles (e.g., instance type).")]),e("li",null,[e("strong",null,"Edges"),t(": Represent relationships, including direction, start/end nodes, a label for relationship type, and optional property value assertions.")])])]),e("li",null,[e("p",null,"Many graph database implementations support hosting with flexible schemas to support heterogeneity and velocity.")])],-1)])),_:1,__:[0]},16))}};export{v as default};
